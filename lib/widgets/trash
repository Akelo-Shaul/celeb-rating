import 'package:flutter/material.dart';
import 'package:share_plus/share_plus.dart';
// You might need to import your Post model here, e.g., 'package:your_app/models/post.dart';
// Also ensure _showShareModal and _buildShareOption are defined in the same class or accessible.

// Assume _showShareModal and _buildShareOption are part of your _ProfilePageState or similar State class
// as provided in the previous response.

class PostCard extends StatelessWidget {
  final Post post;
  final Function(Post) onSharePressed; // Callback to trigger the modal

  const PostCard({
    Key? key,
    required this.post,
    required this.onSharePressed,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Card(
      margin: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 16.0),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              post.title,
              style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8.0),
            if (post.imageUrl != null)
              Image.network(
                post.imageUrl!,
                height: 200,
                width: double.infinity,
                fit: BoxFit.cover,
                errorBuilder: (context, error, stackTrace) =>
                    Container(height: 200, color: Colors.grey[300], child: const Icon(Icons.broken_image)),
              ),
            const SizedBox(height: 8.0),
            Text(post.content),
            const SizedBox(height: 16.0),
            Row(
              mainAxisAlignment: MainAxisAlignment.end,
              children: [
                // Example of a share button
                ElevatedButton.icon(
                  onPressed: () {
                    onSharePressed(post); // Call the share modal function
                  },
                  icon: const Icon(Icons.share),
                  label: const Text('Share'),
                ),
                // Add other actions like Likes, Comments
              ],
            ),
          ],
        ),
      ),
    );
  }
}

// Example usage within a StatefulWidget (e.g., your ProfilePage's _ProfilePageState)
class MyPostsScreen extends StatefulWidget {
  const MyPostsScreen({super.key});

  @override
  State<MyPostsScreen> createState() => _MyPostsScreenState();
}

class _MyPostsScreenState extends State<MyPostsScreen> {
  // Dummy list of posts for demonstration
  final List<Post> _posts = [
    Post(
      id: 'post1',
      title: 'Exciting News!',
      content: 'Just wrapped up a new project. So thrilled to share the details soon!',
      imageUrl: 'https://i.ibb.co/N73yB9c/red-carpet1.jpg',
    ),
    Post(
      id: 'post2',
      title: 'Throwback Thursday',
      content: 'Remembering this amazing moment from last year\'s gala.',
      imageUrl: 'https://i.ibb.co/y4L2k2n/red-carpet2.jpg',
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('My Posts')),
      body: ListView.builder(
        itemCount: _posts.length,
        itemBuilder: (context, index) {
          final post = _posts[index];
          return PostCard(
            post: post,
            onSharePressed: (selectedPost) {
              // This is the instance usage!
              _showShareModal(context, selectedPost);
            },
          );
        },
      ),
    );
  }

  // Define _showShareModal and _buildShareOption here, as they are part of this State class
  // (Copy these functions from the previous response into this class)

  Future<void> _showShareModal(BuildContext context, Post postToShare) async {
    final isDark = Theme.of(context).brightness == Brightness.dark;
    final defaultTextColor = isDark ? Colors.white : Colors.black;
    final secondaryTextColor = isDark ? Colors.grey.shade400 : Colors.grey.shade600;

    await showModalBottomSheet(
      context: context,
      isScrollControlled: true,
      backgroundColor: Colors.transparent,
      builder: (BuildContext context) {
        return Container(
          decoration: BoxDecoration(
            color: Theme.of(context).cardColor,
            borderRadius: const BorderRadius.vertical(top: Radius.circular(20)),
          ),
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Center(
                child: Container(
                  height: 4,
                  width: 40,
                  margin: const EdgeInsets.only(bottom: 16),
                  decoration: BoxDecoration(
                    color: Colors.grey[400],
                    borderRadius: BorderRadius.circular(2),
                  ),
                ),
              ),
              Text(
                'Share Post',
                style: TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.bold,
                  color: defaultTextColor,
                ),
              ),
              const SizedBox(height: 16),
              // Display a preview of the post
              Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: isDark ? Colors.grey.shade900 : Colors.grey.shade100,
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Row(
                  children: [
                    if (postToShare.imageUrl != null)
                      ClipRRect(
                        borderRadius: BorderRadius.circular(8),
                        child: Image.network(
                          postToShare.imageUrl!,
                          width: 60,
                          height: 60,
                          fit: BoxFit.cover,
                          errorBuilder: (context, error, stackTrace) =>
                              Icon(Icons.image, size: 60, color: secondaryTextColor),
                        ),
                      ),
                    const SizedBox(width: 12),
                    Expanded(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            postToShare.title,
                            style: TextStyle(
                              fontWeight: FontWeight.bold,
                              color: defaultTextColor,
                            ),
                            maxLines: 1,
                            overflow: TextOverflow.ellipsis,
                          ),
                          Text(
                            postToShare.content,
                            style: TextStyle(
                              fontSize: 13,
                              color: secondaryTextColor,
                            ),
                            maxLines: 2,
                            overflow: TextOverflow.ellipsis,
                          ),
                        ],
                      ),
                    ),
                    IconButton(
                      icon: Icon(Icons.copy, color: defaultTextColor),
                      onPressed: () {
                        // Copy link to clipboard
                        // import 'package:flutter/services.dart';
                        // Clipboard.setData(ClipboardData(text: 'Your post link here: ${postToShare.id}'));
                        ScaffoldMessenger.of(context).showSnackBar(
                          const SnackBar(content: Text('Link copied!')),
                        );
                        Navigator.pop(context);
                      },
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 16),
              // Share buttons for various platforms
              GridView.count(
                shrinkWrap: true,
                physics: const NeverScrollableScrollPhysics(),
                crossAxisCount: 4,
                mainAxisSpacing: 10,
                crossAxisSpacing: 10,
                children: [
                  _buildShareOption(
                    icon: Icons.share,
                    label: 'Share',
                    onTap: () async {
                      Navigator.pop(context); // Close modal first
                      await Share.share('${postToShare.title}\n${postToShare.content}\nCheck it out: [Your post link here]');
                    },
                    defaultTextColor: defaultTextColor,
                  ),
                  _buildShareOption(
                    icon: Icons.facebook,
                    label: 'Facebook',
                    onTap: () async {
                      Navigator.pop(context);
                      await Share.share('Check out this post on Facebook: [Your post link here]');
                    },
                    defaultTextColor: defaultTextColor,
                  ),
                  _buildShareOption(
                    icon: Icons.person,
                    label: 'Twitter',
                    onTap: () async {
                      Navigator.pop(context);
                      await Share.share('Check out this post on Twitter: [Your post link here] #YourApp');
                    },
                    defaultTextColor: defaultTextColor,
                  ),
                  _buildShareOption(
                    icon: Icons.message,
                    label: 'WhatsApp',
                    onTap: () async {
                      Navigator.pop(context);
                      await Share.share('Hey, check out this post: [Your post link here]');
                    },
                    defaultTextColor: defaultTextColor,
                  ),
                ],
              ),
            ],
          ),
        );
      },
    );
  }

  // Helper widget for share options
  Widget _buildShareOption({
    required IconData icon,
    required String label,
    required VoidCallback onTap,
    required Color defaultTextColor,
  }) {
    return GestureDetector(
      onTap: onTap,
      child: Column(
        children: [
          CircleAvatar(
            radius: 25,
            backgroundColor: Theme.of(context).primaryColor.withOpacity(0.1),
            child: Icon(icon, color: Theme.of(context).primaryColor),
          ),
          const SizedBox(height: 4),
          Text(
            label,
            style: TextStyle(fontSize: 12, color: defaultTextColor),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }
}